---
layout: post
title: Notifications through DBus
description: |
  Add a description to this article here. Keep it short and sweet.
date:  2018-01-19 14:03:52 +0000
type: tools # for icon
category: tools # for url
tags:
 - tools
 - autogenerated
og:
  type: article # http://ogp.me/#types
#  og:type: # 
#   - og:value: value
#     og:attr: foo
#   - og:value: value
#image: https://s3.eu-central-1.amazonaws.com/vid.bina.me/img/brexit.png
#twitter:
#  card: summary
#  image: https://s3.eu-central-1.amazonaws.com/vid.bina.me/img/brexit.png
head: mugshot
---
Yesterday, a bit of config hacking with Lassulus at c-base, resulted to a bunch
of new ideas that I would like to implement. In short, I would like to mimick
one specific feature that I remember from my Alfred usage days on OSX on my
Linux setup. Think about typing mathmatical expressions and getting the answers
presented through popups or notifications, for starters. Perhaps even copying it
to the clipboard right away, or at least allowing the user to click the
notification or a button on a notification to perform the copy operation.

So this post documents my journey and learnings in my attempts to solve this
issue.

At this stage I had already installed notify-osd on my NixOS :snowflake: mech
before. Puzzled by notify-osd automatically starting after me logging in,
without any reference to it in any of the services or dotfiles I wrote led me
down a little investigation into the suspected culprits. :confused:.

A grep on the Nixpkgs codebase indicates that there is merely a package defined
for notify-osd, that provides a "wrapped" binary and nothing more -- no
services or additions to startup scripts or dotfiles.

Furthermore, I found no services mentioning notify-osd and not a single
reference in any of my existing dotfiles.

WTF is starting notify-osd? :confused:

The output of `pstree` displays `notify-osd` just one level under the init
system (`systemd`), which would leave one to assume that either systemd sparked
the process (and perhaps manages it too) or something else triggered a start of
notify-osd. Since it isn't forked under another application that could provide
clues as to what started it, I still have to look elsewhere for answers.

systemd
somehow. If there is no mention of notify-osd in any of my systemd services, it
may have been triggered by something that communicates over D-Bus.

```
vid@localhost> pstree -g 2                                                                                                                                                      ~
─┬◆ 00001 root systemd 
 ├──◆ 01615 rtkit /.../libexec/rtkit-daemon 
 ├──◆ 01575 vid /run/current-system/sw/bin/dbus-daemon --fork --print-pid 5 --print-address 7 --session 
 ├─── 01560 vid /.../bin/dbus-launch --exit-with-session /... none+xmonad
 ├─┬◆ 01443 vid /.../lib/systemd/systemd --user 
 │ ├─┬◆ 01631 vid /.../bin/pulseaudio --daemonize=no 
 │ │ └─── 01635 vid /.../libexec/pulse/gconf-helper 
 │ ├──◆ 01507 vid /.../bin/gpg-agent --supervised 
 │ ├─── 01448 vid (sd-pam)  
 │ └─┬◆ 01649 vid /.../bin/bash -e /.../bin/ibus-daemon-start 
 │   └─┬◆ 01650 vid /.../bin/.ibus-daemon-wrapped_ --cache=refresh 
 │     ├─── 01676 vid /.../libexec/ibus-engine-simple 
 │     ├─── 01661 vid /.../libexec/ibus-ui-gtk3 
 │     └─── 01659 vid /.../libexec/ibus-dconf 
 ├──◆ 01394 root /..._supplicant-2.6/sbin//wpa_supplicant -u 
 ├──◆ 01385 polkituser /.../lib/polkit-1/polkitd --no-debug 
 ├──◆ 01275 dnsmasq /.../bin/dnsmasq -k --enable-dbus --user=dnsmasq -C /...
 ├──◆ 01263 root agetty --login-program /.../bin/login --noclear --keep-baud tty1 115200,38400,9600 linux 
 ├──◆ 01259 privoxy /.../bin/privoxy --no-daemon --user privoxy /... 
 ├─┬◆ 01246 root /.../libexec/docker/dockerd --group=docker --host=fd:// --log-driver=journald --live-restore --graph=/s
 │ └──◆ 01286 root docker-containerd -l unix:///var/run/docker/libcontainerd/docker-containerd.sock --metrics-interval=0 --start-timeout 2m --state-dir /var/run/docker/libcontai
 ├─┬◆ 01163 root /.../bin/slim 
 │ ├─┬─ 01490 vid /store/vidbina.home/.xmonad/xmonad-x86_64-linux 
 │ │ ├─┬◆ 02578 vid /run/current-system/sw/bin/termite 
 │ │ │ └──◆ 02584 vid /run/current-system/sw/bin/zsh 
 │ │ ├─┬◆ 01683 vid /run/current-system/sw/bin/termite 
 │ │ │ └─┬◆ 01704 vid /run/current-system/sw/bin/zsh 
 │ │ │   └──◆ 04224 vid pstree -g 2 
 │ │ ├──◆ 01667 vid xmobar -x0 
 │ │ ├─── 01657 vid /.../bin/python /.../bin/..blueman-applet-wrapped-w
 │ │ ├─── 01656 vid /run/current-system/sw/bin/nm-applet --sm-disable 
 │ │ └─── 01655 vid trayer --edge top --align right --SetDockType true --SetPartialStrut true --expand true --width 5 --transparent true --tint 0x212121 --height 24 
 │ └──◆ 01244 root /.../bin/X -config /... -xkbdir /...
 ├──◆ 01128 root /.../lib/systemd/systemd-logind 
 ├──◆ 01030 messagebus /.../bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation 
 ├──◆ 01024 dictd dictd 1.12.1: 0/0                                                                                                                                              
 ├─┬◆ 01017 root /.../sbin/NetworkManager --no-daemon 
 │ └──◆ 01747 root /.../bin/dhclient -d -q -sf /.../libexec/nm-dhc
 ├──◆ 01015 root /.../bin/illum-d 
 ├──◆ 01012 root /.../libexec/bluetooth/bluetoothd 
 ├──◆ 01011 root /.../sbin/rngd -f -v 
 ├──◆ 01008 root acpid --confdir /... 
 ├──◆ 00995 root /...+git20161120/bin/w3m /.../share/doc/nixos/index.html 
 ├──◆ 00955 systemd-timesync /.../lib/systemd/systemd-timesyncd 
 ├──◆ 00692 root /.../lib/systemd/systemd-udevd 
 ├──◆ 00686 root /.../lib/systemd/systemd-journald 
 ├─┬─ 02915 vid /run/current-system/sw/bin/zsh 
 │ └─── 02924 vid /.../bin/.firefox-wrapped 
 ├──◆ 01837 nscd nscd 
 ├─── 01829 vid /.../bin/notify-osd 
 └─── 01699 vid /.../libexec/bluetooth/obexd
```

# D-Bus

On the [DBus][dbus] homepage, I read the next under the section __What is D-Bus__:

> D-Bus is a message bus system, a simple way for applications to talk to one another. In addition to interprocess communication, D-Bus helps coordinate process lifecycle; it makes it simple and reliable to code a "single instance" application or daemon, and to **launch applications and daemons on demand** when their services are needed.

Installing `dbus-map`

## Links

- http://web.mit.edu/~cocosci/Papers/statistics-and-the-Bayesian-mind.pdf

[dbus]: https://www.freedesktop.org/wiki/Software/dbus/
