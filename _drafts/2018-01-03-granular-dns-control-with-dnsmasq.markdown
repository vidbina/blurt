---
layout: post
title: Granular DNS control with dnsmasq
description: |
  How to obtain a bit more control over your DNS resolution strategy by
  means of dnsmasq.
date:  2018-01-03 14:33:39 +0000
type: networking # for icon
category: networking # for url
tags:
 - networking
 - DNS
 - dnsmasq
 - vpn
og:
  type: article # http://ogp.me/#types
#  og:type: # 
#   - og:value: value
#     og:attr: foo
#   - og:value: value
#image: https://s3.eu-central-1.amazonaws.com/vid.bina.me/img/brexit.png
#twitter:
#  card: summary
#  image: https://s3.eu-central-1.amazonaws.com/vid.bina.me/img/brexit.png
head: mugshot
---
Depending on your setup, a connection to a new network could result to the
reconfiguration of your DNS server listing. On NixOS, as for many other Linux
distributions, `resolvconf` handles the management of the resolv.conf file
which is consulted by the multitudes of resolvers that need the addresses to
domain names.

Because I want to cache my DNS requests locally and provide some masking rules
to handle `*.local` domains "my way" :clown:, I am using dnsmasq. Effectively,
I'm running my own DNS server on localhost and my resolv.conf reflects this by
listing 127.0.0.1 as my nameserver of choice :smile:.

```
vid@localhost> cat /etc/resolv.conf
# Generated by resolvconf
search fritz.box
nameserver 127.0.0.1
options edns0
```

> Since I'm running `dnsmasq` my nameserver listing in my /etc/resolv.conf
will hardly ever change since I'm always using my own DNS server. Those who
don't use dnsmasq or an alternative, should expect to find their actual
network's DNS servers listed in /etc/resolv.conf.

## NetworkManager and dnsmasq

Since I'm using NetworkManager, NetworkManager submits new DNS information to
resolvconf or dnsmasq as I establish new connections. Note how my
NetworkManager.conf specifies that I handle my DNS problems through dnsmasq.
Even if I didn't run dnsmasq as a service, NetworkManager would in this case
spawn a dnsmasq instance to handle my DNS resolution needs.

Just to get a point accross, bare with me for a second
 - observe your dnsmasq processes by running `ps aux | grep dnsmasq`,
 - stop your dnsmasq service (which on NixOS :snowflake: is done by running
 `systemctl stop dnsmasq.service` on NixOS)
 - take down a NetworkManager controlled connection (e.g.: `nmcli down $CONN`)
 - bring up the connection again (e.g.: `nmcli up $CONN`) and
 - observe your running processes involving dnsmasq by running
 `ps aux | grep dnsmasq`

which should contain an NetworkManager-invoked instance of dnsmasq :wink:.

After having NetworkManager start dnsmasq, NetworkManager will keep an eye on
the process ID of dnsmasq and respawn it whenever the processes is terminated.
Therefore, after running through the steps proposed before to make that point
one may want to 

 - stop the network manager service
 - kill the dnsmasq processes that network manager spawned now that it is down
 and won't just restart the dnsmasq process
 - start the dnsmasq service
 - start the network manager service

in order to restore the system's behavior to the former state where dnsmasq is
running as service.

```
vid@localhost> cat /etc/NetworkManager/NetworkManager.conf
[main]
plugins=keyfile
dhcp=dhclient
dns=dnsmasq

[keyfile]
unmanaged-devices=vboxnet0

[logging]
level=WARN

[connection]
ipv6.ip6-privacy=2
ethernet.cloned-mac-address=preserve
wifi.cloned-mac-address=preserve
```

So in order to get an idea of what NetworkManager thinks our resolvconf setup
should look like, check out the following file.

```
vid@localhost> cat /run/NetworkManager/resolv.conf
# Generated by NetworkManager
search fritz.box
nameserver 127.0.0.1
```

```
# Just at home behind my Fritz box
vid@localhost> resolvconf -l
# resolv.conf from static
nameserver 127.0.0.1

# resolv.conf from NetworkManager
# Generated by NetworkManager
search fritz.box
nameserver 192.168.178.1

vid@localhost> cat /etc/dnsmasq-conf.conf
# Generated by resolvconf
server=/fritz.box/192.168.178.1
vid@localhost> cat /etc/dnsmasq-resolv.conf
# Generated by resolvconf
nameserver 192.168.178.1
```

```
# After establishing an OpenVPN connection
vid@localhost> resolvconf -l
# resolv.conf from static
nameserver 127.0.0.1

# resolv.conf from NetworkManager
# Generated by NetworkManager
search fritz.box
nameserver 10.9.0.1
nameserver 10.8.0.1
nameserver 192.168.178.1

vid@localhost> cat /etc/dnsmasq-conf.conf
# Generated by resolvconf
server=/fritz.box/10.9.0.1
server=/fritz.box/10.8.0.1
server=/fritz.box/192.168.178.1

vid@localhost> cat /etc/dnsmasq-resolv.conf
# Generated by resolvconf
nameserver 10.9.0.1
nameserver 10.8.0.1
nameserver 192.168.178.1
```

> For more information on resolvconf consult `man resolvconf` :wink:.

The /etc/dnsmasq-\*.conf files are managed by by resolvconf. In some cases
connecting to WiFI networks and then subsequently up-ing a VPN connection
may result to a DNS configuration that defaults to the non-VPN DNS servers
first. This could be a problem since, depending on the region, the DNS
servers for a given provider may take precedence over your VPN's DNS
servers.

> For example, when I'm on a ziggo.nl network in The Netherlands, a website
such as thepiratebay.org is blocked as a result of a court-order. Any attempt
to access thepiratebay.org will lead to a page notifying the user of the court
mandated DNS resolution policy.


`sudo resolvconf -a wlp58s0 < ccc.conf`

```
vid@localhost> resolvconf -l
# resolv.conf from static
nameserver 127.0.0.1

# resolv.conf from NetworkManager
# Generated by NetworkManager
search fritz.box
nameserver 192.168.178.1

# resolv.conf from wlp58s0
nameserver 213.73.91.35
```

> I `systemctl stop dnsmasq.service`, take down a connection `nmcli con down HOME`
and bring it back up again just to notice that another instance of dnsmasq get
spawned by NetworkManager.

 - http://cweiske.de/tagebuch/networkmanager-dnsmasq.htm
 - https://wiki.archlinux.org/index.php/Dnsmasq
